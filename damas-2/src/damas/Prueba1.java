 package damas;

import static org.junit.Assert.*;

import java.util.HashMap;
import java.util.Map;
import java.util.Set;

import   org.junit.Test;

public class Prueba1 {

	@Test
	public void givenHashMap_whenRetrievesKeyset_thenCorrect() {
	    Map<String, String> map = new HashMap<String, String>();
	    map.put("name", "baeldung");
	    map.put("type", "blog");
	    Set<String> keys = map.keySet();
	    assertEquals(2, keys.size());
	    assertTrue(keys.contains("name"));
	    assertTrue(keys.contains("type"));
	}

	@Test
	public void givenNullKeyAndVal_whenAccepts_thenCorrect(){
		System.out.println("xxxxx");
	    Map<String, String> map = new HashMap<>();
	    map.put(null, null);
	}


	@Test
	public void givenExistingKey_whenPutReturnsPrevValue_thenCorrect() {
	    Map<String, String> map = new HashMap<>();
	    map.put("key1", "val1");
	    map.put("key2", "val2");
	    map.put("key3", "val3");
	    map.put("key4", "val4");
	    map.put("key5", "val5");
	    map.put("key6", "val6");
	    map.put("key7", "val7");
	    map.put("key8", "val8");
	    map.put("key9", "val9");
	    map.put("key10", "val10");
	    map.put("key11", "val11");
	    map.put("key12", "val12");
	    map.put("key13", "val13");
	    map.put("key14", "val14");
	    map.put("key15", "val15");
	    map.put("key16", "val16");
	    map.put("key17", "val17");
	    map.put("key18", "val18");
	    map.put("key19", "val19");
	    map.put("key20", "val20");
	    map.put("key21", "val21");
	    map.put("key22", "val22");
	    map.put("key23", "val23");
	    map.put("key24", "val24");
	    map.put("key25", "val25");
	    map.put("key26", "val26");
	    map.put("key27", "val27");
	    map.put("key28", "val28");
	    map.put("key29", "val29");
	    map.put("key30", "val30");
	    map.put("key31", "val31");
	    map.put("key32", "val32");
	    map.put("key33", "val33");
	    map.put("key34", "val34");
	    map.put("key35", "val35");
	    map.put("key36", "val36");
	    map.put("key37", "val37");
	    map.put("key38", "val38");
	    map.put("key39", "val39");
	    map.put("key40", "val40");
	    map.put("key41", "val41");
	    map.put("key42", "val42");
	    map.put("key43", "val43");
	    map.put("key44", "val44");
	    map.put("key45", "val45");
	    map.put("key46", "val46");
	    map.put("key47", "val47");
	    map.put("key48", "val48");
	    map.put("key49", "val49");
	    map.put("key50", "val50");
	    map.put("key51", "val51");
	    map.put("key52", "val52");
	    map.put("key53", "val53");
	    map.put("key54", "val54");
	    map.put("key55", "val55");
	    map.put("key56", "val56");
	    map.put("key57", "val57");
	    map.put("key58", "val58");
	    map.put("key59", "val59");
	    map.put("key60", "val60");
	    map.put("key61", "val61");
	    map.put("key62", "val62");
	    map.put("key63", "val63");
	    map.put("key64", "val64");
	    map.put("key65", "val65");
	    map.put("key66", "val66");
	    map.put("key67", "val67");
	    map.put("key68", "val68");
	    map.put("key69", "val69");
	    map.put("key70", "val70");
	    map.put("key71", "val71");
	    map.put("key72", "val72");
	    map.put("key73", "val73");
	    map.put("key74", "val74");
	    map.put("key75", "val75");
	    map.put("key76", "val76");
	    map.put("key77", "val77");
	    map.put("key78", "val78");
	    map.put("key79", "val79");
	    map.put("key80", "val80");
	    map.put("key81", "val81");
	    map.put("key82", "val82");
	    map.put("key83", "val83");
	    map.put("key84", "val84");
	    map.put("key85", "val85");
	    map.put("key86", "val86");
	    map.put("key87", "val87");
	    map.put("key88", "val88");
	    map.put("key89", "val89");
	    map.put("key90", "val90");
	    map.put("key91", "val91");
	    map.put("key92", "val92");
	    map.put("key93", "val93");
	    map.put("key94", "val94");
	    map.put("key95", "val95");
	    map.put("key96", "val96");
	    map.put("key97", "val97");
	    map.put("key98", "val98");
	    map.put("key99", "val99");
	    map.put("key100", "val100");
	    map.put("key101", "val101");
	    map.put("key102", "val102");
	    map.put("key103", "val103");
	    map.put("key104", "val104");
	    map.put("key105", "val105");
	    map.put("key106", "val106");
	    map.put("key107", "val107");
	    map.put("key108", "val108");
	    map.put("key109", "val109");
	    map.put("key110", "val110");
	    map.put("key111", "val111");
	    map.put("key112", "val112");
	    map.put("key113", "val113");
	    map.put("key114", "val114");
	    map.put("key115", "val115");
	    map.put("key116", "val116");
	    map.put("key117", "val117");
	    map.put("key118", "val118");
	    map.put("key119", "val119");
	    map.put("key120", "val120");
	    map.put("key121", "val121");
	    map.put("key122", "val122");
	    map.put("key123", "val123");
	    map.put("key124", "val124");
	    map.put("key125", "val125");
	    map.put("key126", "val126");
	    map.put("key127", "val127");
	    map.put("key128", "val128");
	    map.put("key129", "val129");
	    map.put("key130", "val130");
	    map.put("key131", "val131");
	    map.put("key132", "val132");
	    map.put("key133", "val133");
	    map.put("key134", "val134");
	    map.put("key135", "val135");
	    map.put("key136", "val136");
	    map.put("key137", "val137");
	    map.put("key138", "val138");
	    map.put("key139", "val139");
	    map.put("key140", "val140");
	    map.put("key141", "val141");
	    map.put("key142", "val142");
	    map.put("key143", "val143");
	    map.put("key144", "val144");
	    map.put("key145", "val145");
	    map.put("key146", "val146");
	    map.put("key147", "val147");
	    map.put("key148", "val148");
	    map.put("key149", "val149");
	    map.put("key150", "val150");
	    map.put("key151", "val151");
	    map.put("key152", "val152");
	    map.put("key153", "val153");
	    map.put("key154", "val154");
	    map.put("key155", "val155");
	    map.put("key156", "val156");
	    map.put("key157", "val157");
	    map.put("key158", "val158");
	    map.put("key159", "val159");
	    map.put("key160", "val160");
	    map.put("key161", "val161");
	    map.put("key162", "val162");
	    map.put("key163", "val163");
	    map.put("key164", "val164");
	    map.put("key165", "val165");
	    map.put("key166", "val166");
	    map.put("key167", "val167");
	    map.put("key168", "val168");
	    map.put("key169", "val169");
	    map.put("key170", "val170");
	    map.put("key171", "val171");
	    map.put("key172", "val172");
	    map.put("key173", "val173");
	    map.put("key174", "val174");
	    map.put("key175", "val175");
	    map.put("key176", "val176");
	    map.put("key177", "val177");
	    map.put("key178", "val178");
	    map.put("key179", "val179");
	    map.put("key180", "val180");
	    map.put("key181", "val181");
	    map.put("key182", "val182");
	    map.put("key183", "val183");
	    map.put("key184", "val184");
	    map.put("key185", "val185");
	    map.put("key186", "val186");
	    map.put("key187", "val187");
	    map.put("key188", "val188");
	    map.put("key189", "val189");
	    map.put("key190", "val190");
	    map.put("key191", "val191");
	    map.put("key192", "val192");
	    map.put("key193", "val193");
	    map.put("key194", "val194");
	    map.put("key195", "val195");
	    map.put("key196", "val196");
	    map.put("key197", "val197");
	    map.put("key198", "val198");
	    map.put("key199", "val199");
	    map.put("key200", "val200");
	    map.put("key201", "val201");
	    map.put("key202", "val202");
	    map.put("key203", "val203");
	    map.put("key204", "val204");
	    map.put("key205", "val205");
	    map.put("key206", "val206");
	    map.put("key207", "val207");
	    map.put("key208", "val208");
	    map.put("key209", "val209");
	    map.put("key210", "val210");
	    map.put("key211", "val211");
	    map.put("key212", "val212");
	    map.put("key213", "val213");
	    map.put("key214", "val214");
	    map.put("key215", "val215");
	    map.put("key216", "val216");
	    map.put("key217", "val217");
	    map.put("key218", "val218");
	    map.put("key219", "val219");
	    map.put("key220", "val220");
	    map.put("key221", "val221");
	    map.put("key222", "val222");
	    map.put("key223", "val223");
	    map.put("key224", "val224");
	    map.put("key225", "val225");
	    map.put("key226", "val226");
	    map.put("key227", "val227");
	    map.put("key228", "val228");
	    map.put("key229", "val229");
	    map.put("key230", "val230");
	    map.put("key231", "val231");
	    map.put("key232", "val232");
	    map.put("key233", "val233");
	    map.put("key234", "val234");
	    map.put("key235", "val235");
	    map.put("key236", "val236");
	    map.put("key237", "val237");
	    map.put("key238", "val238");
	    map.put("key239", "val239");
	    map.put("key240", "val240");
	    map.put("key241", "val241");
	    map.put("key242", "val242");
	    map.put("key243", "val243");
	    map.put("key244", "val244");
	    map.put("key245", "val245");
	    map.put("key246", "val246");
	    map.put("key247", "val247");
	    map.put("key248", "val248");
	    map.put("key249", "val249");
	    map.put("key250", "val250");
	    map.put("key251", "val251");
	    map.put("key252", "val252");
	    map.put("key253", "val253");
	    map.put("key254", "val254");
	    map.put("key255", "val255");
	    map.put("key256", "val256");
	    map.put("key257", "val257");
	    map.put("key258", "val258");
	    map.put("key259", "val259");
	    map.put("key260", "val260");
	    map.put("key261", "val261");
	    map.put("key262", "val262");
	    map.put("key263", "val263");
	    map.put("key264", "val264");
	    map.put("key265", "val265");
	    map.put("key266", "val266");
	    map.put("key267", "val267");
	    map.put("key268", "val268");
	    map.put("key269", "val269");
	    map.put("key270", "val270");
	    map.put("key271", "val271");
	    map.put("key272", "val272");
	    map.put("key273", "val273");
	    map.put("key274", "val274");
	    map.put("key275", "val275");
	    map.put("key276", "val276");
	    map.put("key277", "val277");
	    map.put("key278", "val278");
	    map.put("key279", "val279");
	    map.put("key280", "val280");
	    map.put("key281", "val281");
	    map.put("key282", "val282");
	    map.put("key283", "val283");
	    map.put("key284", "val284");
	    map.put("key285", "val285");
	    map.put("key286", "val286");
	    map.put("key287", "val287");
	    map.put("key288", "val288");
	    map.put("key289", "val289");
	    map.put("key290", "val290");
	    map.put("key291", "val291");
	    map.put("key292", "val292");
	    map.put("key293", "val293");
	    map.put("key294", "val294");
	    map.put("key295", "val295");
	    map.put("key296", "val296");
	    map.put("key297", "val297");
	    map.put("key298", "val298");
	    map.put("key299", "val299");
	    map.put("key300", "val300");
	    map.put("key301", "val301");
	    map.put("key302", "val302");
	    map.put("key303", "val303");
	    map.put("key304", "val304");
	    map.put("key305", "val305");
	    map.put("key306", "val306");
	    map.put("key307", "val307");
	    map.put("key308", "val308");
	    map.put("key309", "val309");
	    map.put("key310", "val310");
	    map.put("key311", "val311");
	    map.put("key312", "val312");
	    map.put("key313", "val313");
	    map.put("key314", "val314");
	    map.put("key315", "val315");
	    map.put("key316", "val316");
	    map.put("key317", "val317");
	    map.put("key318", "val318");
	    map.put("key319", "val319");
	    map.put("key320", "val320");
	    map.put("key321", "val321");
	    map.put("key322", "val322");
	    map.put("key323", "val323");
	    map.put("key324", "val324");
	    map.put("key325", "val325");
	    map.put("key326", "val326");
	    map.put("key327", "val327");
	    map.put("key328", "val328");
	    map.put("key329", "val329");
	    map.put("key330", "val330");
	    map.put("key331", "val331");
	    map.put("key332", "val332");
	    map.put("key333", "val333");
	    map.put("key334", "val334");
	    map.put("key335", "val335");
	    map.put("key336", "val336");
	    map.put("key337", "val337");
	    map.put("key338", "val338");
	    map.put("key339", "val339");
	    map.put("key340", "val340");
	    map.put("key341", "val341");
	    map.put("key342", "val342");
	    map.put("key343", "val343");
	    map.put("key344", "val344");
	    map.put("key345", "val345");
	    map.put("key346", "val346");
	    map.put("key347", "val347");
	    map.put("key348", "val348");
	    map.put("key349", "val349");
	    map.put("key350", "val350");
	    map.put("key351", "val351");
	    map.put("key352", "val352");
	    map.put("key353", "val353");
	    map.put("key354", "val354");
	    map.put("key355", "val355");
	    map.put("key356", "val356");
	    map.put("key357", "val357");
	    map.put("key358", "val358");
	    map.put("key359", "val359");
	    map.put("key360", "val360");
	    map.put("key361", "val361");
	    map.put("key362", "val362");
	    map.put("key363", "val363");
	    map.put("key364", "val364");
	    map.put("key365", "val365");
	    map.put("key366", "val366");
	    map.put("key367", "val367");
	    map.put("key368", "val368");
	    map.put("key369", "val369");
	    map.put("key370", "val370");
	    map.put("key371", "val371");
	    map.put("key372", "val372");
	    map.put("key373", "val373");
	    map.put("key374", "val374");
	    map.put("key375", "val375");
	    map.put("key376", "val376");
	    map.put("key377", "val377");
	    map.put("key378", "val378");
	    map.put("key379", "val379");
	    map.put("key380", "val380");
	    map.put("key381", "val381");
	    map.put("key382", "val382");
	    map.put("key383", "val383");
	    map.put("key384", "val384");
	    map.put("key385", "val385");
	    map.put("key386", "val386");
	    map.put("key387", "val387");
	    map.put("key388", "val388");
	    map.put("key389", "val389");
	    map.put("key390", "val390");
	    map.put("key391", "val391");
	    map.put("key392", "val392");
	    map.put("key393", "val393");
	    map.put("key394", "val394");
	    map.put("key395", "val395");
	    map.put("key396", "val396");
	    map.put("key397", "val397");
	    map.put("key398", "val398");
	    map.put("key399", "val399");
	    map.put("key400", "val400");
	    map.put("key401", "val401");
	    map.put("key402", "val402");
	    map.put("key403", "val403");
	    map.put("key404", "val404");
	    map.put("key405", "val405");
	    map.put("key406", "val406");
	    map.put("key407", "val407");
	    map.put("key408", "val408");
	    map.put("key409", "val409");
	    map.put("key410", "val410");
	    map.put("key411", "val411");
	    map.put("key412", "val412");
	    map.put("key413", "val413");
	    map.put("key414", "val414");
	    map.put("key415", "val415");
	    map.put("key416", "val416");
	    map.put("key417", "val417");
	    map.put("key418", "val418");
	    map.put("key419", "val419");
	    map.put("key420", "val420");
	    map.put("key421", "val421");
	    map.put("key422", "val422");
	    map.put("key423", "val423");
	    map.put("key424", "val424");
	    map.put("key425", "val425");
	    map.put("key426", "val426");
	    map.put("key427", "val427");
	    map.put("key428", "val428");
	    map.put("key429", "val429");
	    map.put("key430", "val430");
	    map.put("key431", "val431");
	    map.put("key432", "val432");
	    map.put("key433", "val433");
	    map.put("key434", "val434");
	    map.put("key435", "val435");
	    map.put("key436", "val436");
	    map.put("key437", "val437");
	    map.put("key438", "val438");
	    map.put("key439", "val439");
	    map.put("key440", "val440");
	    map.put("key441", "val441");
	    map.put("key442", "val442");
	    map.put("key443", "val443");
	    map.put("key444", "val444");
	    map.put("key445", "val445");
	    map.put("key446", "val446");
	    map.put("key447", "val447");
	    map.put("key448", "val448");
	    map.put("key449", "val449");
	    map.put("key450", "val450");
	    map.put("key451", "val451");
	    map.put("key452", "val452");
	    map.put("key453", "val453");
	    map.put("key454", "val454");
	    map.put("key455", "val455");
	    map.put("key456", "val456");
	    map.put("key457", "val457");
	    map.put("key458", "val458");
	    map.put("key459", "val459");
	    map.put("key460", "val460");
	    map.put("key461", "val461");
	    map.put("key462", "val462");
	    map.put("key463", "val463");
	    map.put("key464", "val464");
	    map.put("key465", "val465");
	    map.put("key466", "val466");
	    map.put("key467", "val467");
	    map.put("key468", "val468");
	    map.put("key469", "val469");
	    map.put("key470", "val470");
	    map.put("key471", "val471");
	    map.put("key472", "val472");
	    map.put("key473", "val473");
	    map.put("key474", "val474");
	    map.put("key475", "val475");
	    map.put("key476", "val476");
	    map.put("key477", "val477");
	    map.put("key478", "val478");
	    map.put("key479", "val479");
	    map.put("key480", "val480");
	    map.put("key481", "val481");
	    map.put("key482", "val482");
	    map.put("key483", "val483");
	    map.put("key484", "val484");
	    map.put("key485", "val485");
	    map.put("key486", "val486");
	    map.put("key487", "val487");
	    map.put("key488", "val488");
	    map.put("key489", "val489");
	    map.put("key490", "val490");
	    map.put("key491", "val491");
	    map.put("key492", "val492");
	    map.put("key493", "val493");
	    map.put("key494", "val494");
	    map.put("key495", "val495");
	    map.put("key496", "val496");
	    map.put("key497", "val497");
	    map.put("key498", "val498");
	    map.put("key499", "val499");
	    map.put("key500", "val500");
	    map.put("key501", "val501");
	    map.put("key502", "val502");
	    map.put("key503", "val503");
	    map.put("key504", "val504");
	    map.put("key505", "val505");
	    map.put("key506", "val506");
	    map.put("key507", "val507");
	    map.put("key508", "val508");
	    map.put("key509", "val509");
	    map.put("key510", "val510");
	    map.put("key511", "val511");
	    map.put("key512", "val512");
	    map.put("key513", "val513");
	    map.put("key514", "val514");
	    map.put("key515", "val515");
	    map.put("key516", "val516");
	    map.put("key517", "val517");
	    map.put("key518", "val518");
	    map.put("key519", "val519");
	    map.put("key520", "val520");
	    map.put("key521", "val521");
	    map.put("key522", "val522");
	    map.put("key523", "val523");
	    map.put("key524", "val524");
	    map.put("key525", "val525");
	    map.put("key526", "val526");
	    map.put("key527", "val527");
	    map.put("key528", "val528");
	    map.put("key529", "val529");
	    map.put("key530", "val530");
	    map.put("key531", "val531");
	    map.put("key532", "val532");
	    map.put("key533", "val533");
	    map.put("key534", "val534");
	    map.put("key535", "val535");
	    map.put("key536", "val536");
	    map.put("key537", "val537");
	    map.put("key538", "val538");
	    map.put("key539", "val539");
	    map.put("key540", "val540");
	    map.put("key541", "val541");
	    map.put("key542", "val542");
	    map.put("key543", "val543");
	    map.put("key544", "val544");
	    map.put("key545", "val545");
	    map.put("key546", "val546");
	    map.put("key547", "val547");
	    map.put("key548", "val548");
	    map.put("key549", "val549");
	    map.put("key550", "val550");
	    map.put("key551", "val551");
	    map.put("key552", "val552");
	    map.put("key553", "val553");
	    map.put("key554", "val554");
	    map.put("key555", "val555");
	    map.put("key556", "val556");
	    map.put("key557", "val557");
	    map.put("key558", "val558");
	    map.put("key559", "val559");
	    map.put("key560", "val560");
	    map.put("key561", "val561");
	    map.put("key562", "val562");
	    map.put("key563", "val563");
	    map.put("key564", "val564");
	    map.put("key565", "val565");
	    map.put("key566", "val566");
	    map.put("key567", "val567");
	    map.put("key568", "val568");
	    map.put("key569", "val569");
	    map.put("key570", "val570");
	    map.put("key571", "val571");
	    map.put("key572", "val572");
	    map.put("key573", "val573");
	    map.put("key574", "val574");
	    map.put("key575", "val575");
	    map.put("key576", "val576");
	    map.put("key577", "val577");
	    map.put("key578", "val578");
	    map.put("key579", "val579");
	    map.put("key580", "val580");
	    map.put("key581", "val581");
	    map.put("key582", "val582");
	    map.put("key583", "val583");
	    map.put("key584", "val584");
	    map.put("key585", "val585");
	    map.put("key586", "val586");
	    map.put("key587", "val587");
	    map.put("key588", "val588");
	    map.put("key589", "val589");
	    map.put("key590", "val590");
	    map.put("key591", "val591");
	    map.put("key592", "val592");
	    map.put("key593", "val593");
	    map.put("key594", "val594");
	    map.put("key595", "val595");
	    map.put("key596", "val596");
	    map.put("key597", "val597");
	    map.put("key598", "val598");
	    map.put("key599", "val599");
	    map.put("key600", "val600");
	    map.put("key601", "val601");
	    map.put("key602", "val602");
	    map.put("key603", "val603");
	    map.put("key604", "val604");
	    map.put("key605", "val605");
	    map.put("key606", "val606");
	    map.put("key607", "val607");
	    map.put("key608", "val608");
	    map.put("key609", "val609");
	    map.put("key610", "val610");
	    map.put("key611", "val611");
	    map.put("key612", "val612");
	    map.put("key613", "val613");
	    map.put("key614", "val614");
	    map.put("key615", "val615");
	    map.put("key616", "val616");
	    map.put("key617", "val617");
	    map.put("key618", "val618");
	    map.put("key619", "val619");
	    map.put("key620", "val620");
	    map.put("key621", "val621");
	    map.put("key622", "val622");
	    map.put("key623", "val623");
	    map.put("key624", "val624");
	    map.put("key625", "val625");
	    map.put("key626", "val626");
	    map.put("key627", "val627");
	    map.put("key628", "val628");
	    map.put("key629", "val629");
	    map.put("key630", "val630");
	    map.put("key631", "val631");
	    map.put("key632", "val632");
	    map.put("key633", "val633");
	    map.put("key634", "val634");
	    map.put("key635", "val635");
	    map.put("key636", "val636");
	    map.put("key637", "val637");
	    map.put("key638", "val638");
	    map.put("key639", "val639");
	    map.put("key640", "val640");
	    map.put("key641", "val641");
	    map.put("key642", "val642");
	    map.put("key643", "val643");
	    map.put("key644", "val644");
	    map.put("key645", "val645");
	    map.put("key646", "val646");
	    map.put("key647", "val647");
	    map.put("key648", "val648");
	    map.put("key649", "val649");
	    map.put("key650", "val650");
	    map.put("key651", "val651");
	    map.put("key652", "val652");
	    map.put("key653", "val653");
	    map.put("key654", "val654");
	    map.put("key655", "val655");
	    map.put("key656", "val656");
	    map.put("key657", "val657");
	    map.put("key658", "val658");
	    map.put("key659", "val659");
	    map.put("key660", "val660");
	    map.put("key661", "val661");
	    map.put("key662", "val662");
	    map.put("key663", "val663");
	    map.put("key664", "val664");
	    map.put("key665", "val665");
	    map.put("key666", "val666");
	    map.put("key667", "val667");
	    map.put("key668", "val668");
	    map.put("key669", "val669");
	    map.put("key670", "val670");
	    map.put("key671", "val671");
	    map.put("key672", "val672");
	    map.put("key673", "val673");
	    map.put("key674", "val674");
	    map.put("key675", "val675");
	    map.put("key676", "val676");
	    map.put("key677", "val677");
	    map.put("key678", "val678");
	    map.put("key679", "val679");
	    map.put("key680", "val680");
	    map.put("key681", "val681");
	    map.put("key682", "val682");
	    map.put("key683", "val683");
	    map.put("key684", "val684");
	    map.put("key685", "val685");
	    map.put("key686", "val686");
	    map.put("key687", "val687");
	    map.put("key688", "val688");
	    map.put("key689", "val689");
	    map.put("key690", "val690");
	    map.put("key691", "val691");
	    map.put("key692", "val692");
	    map.put("key693", "val693");
	    map.put("key694", "val694");
	    map.put("key695", "val695");
	    map.put("key696", "val696");
	    map.put("key697", "val697");
	    map.put("key698", "val698");
	    map.put("key699", "val699");
	    map.put("key700", "val700");
	    map.put("key701", "val701");
	    map.put("key702", "val702");
	    map.put("key703", "val703");
	    map.put("key704", "val704");
	    map.put("key705", "val705");
	    map.put("key706", "val706");
	    map.put("key707", "val707");
	    map.put("key708", "val708");
	    map.put("key709", "val709");
	    map.put("key710", "val710");
	    map.put("key711", "val711");
	    map.put("key712", "val712");
	    map.put("key713", "val713");
	    map.put("key714", "val714");
	    map.put("key715", "val715");
	    map.put("key716", "val716");
	    map.put("key717", "val717");
	    map.put("key718", "val718");
	    map.put("key719", "val719");
	    map.put("key720", "val720");
	    map.put("key721", "val721");
	    map.put("key722", "val722");
	    map.put("key723", "val723");
	    map.put("key724", "val724");
	    map.put("key725", "val725");
	    map.put("key726", "val726");
	    map.put("key727", "val727");
	    map.put("key728", "val728");
	    map.put("key729", "val729");
	    map.put("key730", "val730");
	    map.put("key731", "val731");
	    map.put("key732", "val732");
	    map.put("key733", "val733");
	    map.put("key734", "val734");
	    map.put("key735", "val735");
	    map.put("key736", "val736");
	    map.put("key737", "val737");
	    map.put("key738", "val738");
	    map.put("key739", "val739");
	    map.put("key740", "val740");
	    map.put("key741", "val741");
	    map.put("key742", "val742");
	    map.put("key743", "val743");
	    map.put("key744", "val744");
	    map.put("key745", "val745");
	    map.put("key746", "val746");
	    map.put("key747", "val747");
	    map.put("key748", "val748");
	    map.put("key749", "val749");
	    map.put("key750", "val750");
	    map.put("key751", "val751");
	    map.put("key752", "val752");
	    map.put("key753", "val753");
	    map.put("key754", "val754");
	    map.put("key755", "val755");
	    map.put("key756", "val756");
	    map.put("key757", "val757");
	    map.put("key758", "val758");
	    map.put("key759", "val759");
	    map.put("key760", "val760");
	    map.put("key761", "val761");
	    map.put("key762", "val762");
	    map.put("key763", "val763");
	    map.put("key764", "val764");
	    map.put("key765", "val765");
	    map.put("key766", "val766");
	    map.put("key767", "val767");
	    map.put("key768", "val768");
	    map.put("key769", "val769");
	    map.put("key770", "val770");
	    map.put("key771", "val771");
	    map.put("key772", "val772");
	    map.put("key773", "val773");
	    map.put("key774", "val774");
	    map.put("key775", "val775");
	    map.put("key776", "val776");
	    map.put("key777", "val777");
	    map.put("key778", "val778");
	    map.put("key779", "val779");
	    map.put("key780", "val780");
	    map.put("key781", "val781");
	    map.put("key782", "val782");
	    map.put("key783", "val783");
	    map.put("key784", "val784");
	    map.put("key785", "val785");
	    map.put("key786", "val786");
	    map.put("key787", "val787");
	    map.put("key788", "val788");
	    map.put("key789", "val789");
	    map.put("key790", "val790");
	    map.put("key791", "val791");
	    map.put("key792", "val792");
	    map.put("key793", "val793");
	    map.put("key794", "val794");
	    map.put("key795", "val795");
	    map.put("key796", "val796");
	    map.put("key797", "val797");
	    map.put("key798", "val798");
	    map.put("key799", "val799");
	    map.put("key800", "val800");
	    map.put("key801", "val801");
	    map.put("key802", "val802");
	    map.put("key803", "val803");
	    map.put("key804", "val804");
	    map.put("key805", "val805");
	    map.put("key806", "val806");
	    map.put("key807", "val807");
	    map.put("key808", "val808");
	    map.put("key809", "val809");
	    map.put("key810", "val810");
	    map.put("key811", "val811");
	    map.put("key812", "val812");
	    map.put("key813", "val813");
	    map.put("key814", "val814");
	    map.put("key815", "val815");
	    map.put("key816", "val816");
	    map.put("key817", "val817");
	    map.put("key818", "val818");
	    map.put("key819", "val819");
	    map.put("key820", "val820");
	    map.put("key821", "val821");
	    map.put("key822", "val822");
	    map.put("key823", "val823");
	    map.put("key824", "val824");
	    map.put("key825", "val825");
	    map.put("key826", "val826");
	    map.put("key827", "val827");
	    map.put("key828", "val828");
	    map.put("key829", "val829");
	    map.put("key830", "val830");
	    map.put("key831", "val831");
	    map.put("key832", "val832");
	    map.put("key833", "val833");
	    map.put("key834", "val834");
	    map.put("key835", "val835");
	    map.put("key836", "val836");
	    map.put("key837", "val837");
	    map.put("key838", "val838");
	    map.put("key839", "val839");
	    map.put("key840", "val840");
	    map.put("key841", "val841");
	    map.put("key842", "val842");
	    map.put("key843", "val843");
	    map.put("key844", "val844");
	    map.put("key845", "val845");
	    map.put("key846", "val846");
	    map.put("key847", "val847");
	    map.put("key848", "val848");
	    map.put("key849", "val849");
	    map.put("key850", "val850");
	    map.put("key851", "val851");
	    map.put("key852", "val852");
	    map.put("key853", "val853");
	    map.put("key854", "val854");
	    map.put("key855", "val855");
	    map.put("key856", "val856");
	    map.put("key857", "val857");
	    map.put("key858", "val858");
	    map.put("key859", "val859");
	    map.put("key860", "val860");
	    map.put("key861", "val861");
	    map.put("key862", "val862");
	    map.put("key863", "val863");
	    map.put("key864", "val864");
	    map.put("key865", "val865");
	    map.put("key866", "val866");
	    map.put("key867", "val867");
	    map.put("key868", "val868");
	    map.put("key869", "val869");
	    map.put("key870", "val870");
	    map.put("key871", "val871");
	    map.put("key872", "val872");
	    map.put("key873", "val873");
	    map.put("key874", "val874");
	    map.put("key875", "val875");
	    map.put("key876", "val876");
	    map.put("key877", "val877");
	    map.put("key878", "val878");
	    map.put("key879", "val879");
	    map.put("key880", "val880");
	    map.put("key881", "val881");
	    map.put("key882", "val882");
	    map.put("key883", "val883");
	    map.put("key884", "val884");
	    map.put("key885", "val885");
	    map.put("key886", "val886");
	    map.put("key887", "val887");
	    map.put("key888", "val888");
	    map.put("key889", "val889");
	    map.put("key890", "val890");
	    map.put("key891", "val891");
	    map.put("key892", "val892");
	    map.put("key893", "val893");
	    map.put("key894", "val894");
	    map.put("key895", "val895");
	    map.put("key896", "val896");
	    map.put("key897", "val897");
	    map.put("key898", "val898");
	    map.put("key899", "val899");
	    map.put("key900", "val900");
	    map.put("key901", "val901");
	    map.put("key902", "val902");
	    map.put("key903", "val903");
	    map.put("key904", "val904");
	    map.put("key905", "val905");
	    map.put("key906", "val906");
	    map.put("key907", "val907");
	    map.put("key908", "val908");
	    map.put("key909", "val909");
	    map.put("key910", "val910");
	    map.put("key911", "val911");
	    map.put("key912", "val912");
	    map.put("key913", "val913");
	    map.put("key914", "val914");
	    map.put("key915", "val915");
	    map.put("key916", "val916");
	    map.put("key917", "val917");
	    map.put("key918", "val918");
	    map.put("key919", "val919");
	    map.put("key920", "val920");
	    map.put("key921", "val921");
	    map.put("key922", "val922");
	    map.put("key923", "val923");
	    map.put("key924", "val924");
	    map.put("key925", "val925");
	    map.put("key926", "val926");
	    map.put("key927", "val927");
	    map.put("key928", "val928");
	    map.put("key929", "val929");
	    map.put("key930", "val930");
	    map.put("key931", "val931");
	    map.put("key932", "val932");
	    map.put("key933", "val933");
	    map.put("key934", "val934");
	    map.put("key935", "val935");
	    map.put("key936", "val936");
	    map.put("key937", "val937");
	    map.put("key938", "val938");
	    map.put("key939", "val939");
	    map.put("key940", "val940");
	    map.put("key941", "val941");
	    map.put("key942", "val942");
	    map.put("key943", "val943");
	    map.put("key944", "val944");
	    map.put("key945", "val945");
	    map.put("key946", "val946");
	    map.put("key947", "val947");
	    map.put("key948", "val948");
	    map.put("key949", "val949");
	    map.put("key950", "val950");
	    map.put("key951", "val951");
	    map.put("key952", "val952");
	    map.put("key953", "val953");
	    map.put("key954", "val954");
	    map.put("key955", "val955");
	    map.put("key956", "val956");
	    map.put("key957", "val957");
	    map.put("key958", "val958");
	    map.put("key959", "val959");
	    map.put("key960", "val960");
	    map.put("key961", "val961");
	    map.put("key962", "val962");
	    map.put("key963", "val963");
	    map.put("key964", "val964");
	    map.put("key965", "val965");
	    map.put("key966", "val966");
	    String rtnVal = map.put("key1", "val2");
	    System.out.println(map.get("key747"));
	    System.out.println(map.get("key656"));
	    System.out.println(map.get("key875"));
	    System.out.println(map.get("key888"));
	    assertEquals("val1", rtnVal);
	}


	@Test
	public void givenNullVal_whenPutReturnsNull_thenCorrect() {
	    Map<String, String> map = new HashMap<>();
	    String rtnVal = map.put("key1", null);
	    assertNull(rtnVal);
	}

	@Test
	public void givenUnmappedKey_whenGetReturnsNull_thenCorrect() {
	    Map<String, String> map = new HashMap<>();
	    String rtnVal = map.get("key1");	
	    if (rtnVal == null) {
		    System.out.println("nulo");
	    }
	    assertNull(rtnVal);
	}


	@Test
	public void whenContainsDistinguishesNullValues_thenCorrect() {
	    Map<String, String> map = new HashMap<>();
	    String val1 = map.get("key");
	    boolean valPresent = map.containsKey("key");
	    System.out.println("valPresent : "+valPresent);
	    assertNull(val1);
	    assertFalse(valPresent);
	    map.put("key", null);
	    String val = map.get("key");
	    valPresent = map.containsKey("key");
	    System.out.println("valPresent : "+valPresent);
	    assertNull(val);
	    assertTrue(valPresent);
	}

}
